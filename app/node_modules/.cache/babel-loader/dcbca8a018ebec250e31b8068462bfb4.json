{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\flores\\\\flores-del-tambo\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport todos from \"./apis\";\nimport \"./index.css\";\nimport Form from \"./components/Form\";\nimport Section from \"./components/Section\";\nimport List from \"./components/List\";\nimport Navbar from \"./components/Navbar\";\nimport home from \"./pages/home.jsx\";\nconst appTitle = \"To-Do App\";\n\nconst App = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        data\n      } = await todos.get(\"/todos\");\n      setTodoList(data);\n    }\n\n    fetchData();\n  }, []);\n\n  const addTodo = async item => {\n    const {\n      data\n    } = await todos.post(\"/todos\", item);\n    setTodoList(oldList => [...oldList, data]);\n  };\n\n  const removeTodo = async id => {\n    await todos.delete(`/todos/${id}`);\n    setTodoList(oldList => oldList.filter(item => item._id !== id));\n  };\n\n  const editTodo = async (id, item) => {\n    await todos.put(`/todos/${id}`, item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ui hover:translate-x-1\",\n        children: appTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        editTodoListProp: editTodo,\n        removeTodoListProp: removeTodo,\n        list: todoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/andre/flores/flores-del-tambo/app/src/App.js"],"names":["BrowserRouter","Router","Route","Routes","React","useState","useEffect","todos","Form","Section","List","Navbar","home","appTitle","App","todoList","setTodoList","fetchData","data","get","addTodo","item","post","oldList","removeTodo","id","delete","filter","_id","editTodo","put"],"mappings":";;;;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,MAAMC,QAAQ,GAAG,WAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeW,SAAf,GAA2B;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,KAAK,CAACY,GAAN,CAAU,QAAV,CAAvB;AACAH,MAAAA,WAAW,CAACE,IAAD,CAAX;AACH;;AAEDD,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC5B,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACe,IAAN,CAAW,QAAX,EAAqBD,IAArB,CAAvB;AACAL,IAAAA,WAAW,CAAEO,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaL,IAAb,CAAd,CAAX;AACH,GAHD;;AAKA,QAAMM,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,UAAMlB,KAAK,CAACmB,MAAN,CAAc,UAASD,EAAG,EAA1B,CAAN;AACAT,IAAAA,WAAW,CAAEO,OAAD,IAAaA,OAAO,CAACI,MAAR,CAAgBN,IAAD,IAAUA,IAAI,CAACO,GAAL,KAAaH,EAAtC,CAAd,CAAX;AACH,GAHD;;AAKA,QAAMI,QAAQ,GAAG,OAAOJ,EAAP,EAAWJ,IAAX,KAAoB;AACjC,UAAMd,KAAK,CAACuB,GAAN,CAAW,UAASL,EAAG,EAAvB,EAA0BJ,IAA1B,CAAN;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,OAAD;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCR;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI,QAAC,OAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEO;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI,QAAC,OAAD;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,gBAAgB,EAAES,QADtB;AAEI,QAAA,kBAAkB,EAAEL,UAFxB;AAGI,QAAA,IAAI,EAAET;AAHV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA/CD;;GAAMD,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport todos from \"./apis\";\r\nimport \"./index.css\"\r\nimport Form from \"./components/Form\";\r\nimport Section from \"./components/Section\";\r\nimport List from \"./components/List\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport home from \"./pages/home.jsx\";\r\nconst appTitle = \"To-Do App\";\r\n\r\nconst App = () => {\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const { data } = await todos.get(\"/todos\");\r\n            setTodoList(data);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const addTodo = async (item) => {\r\n        const { data } = await todos.post(\"/todos\", item);\r\n        setTodoList((oldList) => [...oldList, data]);\r\n    };\r\n\r\n    const removeTodo = async (id) => {\r\n        await todos.delete(`/todos/${id}`);\r\n        setTodoList((oldList) => oldList.filter((item) => item._id !== id));\r\n    };\r\n\r\n    const editTodo = async (id, item) => {\r\n        await todos.put(`/todos/${id}`, item);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n\r\n            <Navbar />\r\n            <Section>\r\n                <h1 className=\"ui hover:translate-x-1\">{appTitle}</h1>\r\n            </Section>\r\n\r\n            <Section>\r\n                <Form addTodo={addTodo} />\r\n            </Section>\r\n\r\n            <Section>\r\n                <List\r\n                    editTodoListProp={editTodo}\r\n                    removeTodoListProp={removeTodo}\r\n                    list={todoList}\r\n                />\r\n            </Section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}